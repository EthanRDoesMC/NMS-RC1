
#include "OutputPostProcess.shader.h"

//-----------------------------------------------------------------------------
//    Functions



//-----------------------------------------------------------------------------
///
///     WriteOutput
///
///     @brief      WriteOutput
///
///     @param      void
///     @return     Nothing.
///
//-----------------------------------------------------------------------------
void
WriteOutput(    
    out vec4                      lOutColours0Vec4,
    out vec4                      lOutColours1Vec4,
    out vec4                      lOutColours2Vec4,
    out vec4                      lOutColours3Vec4,
    in  PerFrameUniforms          lPerFrameUniforms,
    in  CommonPerMeshUniforms     lMeshUniforms,
    in  CustomPerMaterialUniforms lCustomUniforms,
    in  vec4                      lColourVec4,
    in  vec3                      lPositionVec3,
    in  vec3                      lNormalVec3,
    in  int                       liMaterialID,
    in  float                     lfMetallic,
    in  float                     lfRoughness,
    in  float                     lfSubsurface,
    in  float                     lfGlow,
    in  vec4                      lScreenSpacePositionVec4)
{
    vec4 lFragmentColourVec4;
    
    lFragmentColourVec4 = lColourVec4;

    //-----------------------------------------------------------------------------
    ///
    ///     Lighting
    ///
    //-----------------------------------------------------------------------------
    #ifndef _F07_UNLIT
    {
        vec3 lLightDirectionVec3 = -lPerFrameUniforms.gLightDirectionVec4.xyz;
		mat3 lUpMatrix = GetInverseWorldUpTransform( lPerFrameUniforms.gViewPositionVec3, lMeshUniforms.gPlanetPositionVec4 );
        lFragmentColourVec4.rgb = ComputeLightColour(
            lCustomUniforms,
            lPerFrameUniforms,
            lMeshUniforms,
            lLightDirectionVec3,
            lPositionVec3,
            lScreenSpacePositionVec4.xy / lScreenSpacePositionVec4.w,
            lNormalVec3,
            lColourVec4.rgb,
            lUpMatrix,
            liMaterialID,
            lfMetallic,
            lfRoughness,
            lfSubsurface );
    }
    #endif

    #ifdef _F34_GLOW
    {
        lFragmentColourVec4.rgb = mix( lFragmentColourVec4.rgb, lColourVec4.rgb, lfGlow );

        #ifdef _F35_GLOW_MASK
        {
            lFragmentColourVec4.a   = lfGlow;
        }
        #endif

    }
    #endif

    #if !defined( _F50_DISABLE_POSTPROCESS ) && !defined( D_NO_POSTPROCESS )
    {
        lFragmentColourVec4 = PostProcess(
            lPerFrameUniforms,
            lMeshUniforms,
            lCustomUniforms,
            lFragmentColourVec4,
            lPositionVec3,
            lNormalVec3,
			liMaterialID,
            lScreenSpacePositionVec4);
    }
    #endif
    
    //-----------------------------------------------------------------------------
    ///
    ///     Output
    ///
    //-----------------------------------------------------------------------------	
    lOutColours0Vec4 = lFragmentColourVec4;
}

