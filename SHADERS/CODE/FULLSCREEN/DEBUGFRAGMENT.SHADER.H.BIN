////////////////////////////////////////////////////////////////////////////////
///
///     @file       DebugFragment.h
///     @author     User
///     @date       
///
///     @brief      DebugFragment
///
///     Copyright (c) 2008 Hello Games Ltd. All Rights Reserved.
///
////////////////////////////////////////////////////////////////////////////////


//-----------------------------------------------------------------------------
//      Compilation defines 


//-----------------------------------------------------------------------------
//      Include files

#include "Common/Defines.shader.h"
#include "Common/Common.shader.h"
#include "Common/CommonUniforms.shader.h"


#include "Common/CommonPostProcess.shader.h"

#include "Fullscreen/PostCommon.h"



// =================================================================================================

#ifdef D_DEBUG_SHADOW


//-----------------------------------------------------------------------------
//      Global Data



//-----------------------------------------------------------------------------
//      Typedefs and Classes 

DECLARE_INPUT
    IN_SCREEN_POSITION

    INPUT( vec2, mTexCoordsVec2,     TEXCOORD0 )
DECLARE_END


//-----------------------------------------------------------------------------
//      Functions

FRAGMENT_MAIN_COLOUR_SRT
{
   vec2 newCoords = IN(mTexCoordsVec2);
   float lFragCol = texture2D( lUniforms.mpCustomPerMesh->gBufferMap, newCoords ).x;
   FRAGMENT_COLOUR = vec4( lFragCol, lFragCol, lFragCol, 1.0 );
}

#endif



// =================================================================================================

#ifdef D_DEBUG_FLATCOLOUR

//-----------------------------------------------------------------------------
//      Global Data

//-----------------------------------------------------------------------------
//      Typedefs and Classes 

DECLARE_INPUT
    IN_SCREEN_POSITION

    INPUT( vec2, mTexCoordsVec2,     TEXCOORD0 )
    INPUT( vec4, mWorldPositionVec4, TEXCOORD4 )
DECLARE_END


//-----------------------------------------------------------------------------
//      Functions

FRAGMENT_MAIN_COLOUR
{
    FRAGMENT_COLOUR = vec4( 1.0, 1.0, 0.0, 1.0 );
}

#endif



// =================================================================================================
//
// D_DEBUG_QUAD_SPLIT
//
// =================================================================================================

#ifdef D_DEBUG_QUAD_SPLIT

//-----------------------------------------------------------------------------
//      Global Data

//-----------------------------------------------------------------------------
//      Typedefs and Classes 

DECLARE_INPUT
    IN_SCREEN_POSITION

    INPUT( vec2, mTexCoordsVec2,     TEXCOORD0 )
DECLARE_END

//-----------------------------------------------------------------------------
//      Functions


FRAGMENT_MAIN_COLOUR_SRT
{
    //Debug

    vec3 lFragCol = vec3( 1.0 );
    vec2 newCoords;

    // Bottom Left
    if ( IN( mTexCoordsVec2 ).x < 0.5 && IN( mTexCoordsVec2 ).y < 0.5 )
    {
        newCoords = IN(mTexCoordsVec2) * 2.0;

        lFragCol = texture2D( lUniforms.mpCustomPerMesh->gBuffer2Map, newCoords ).xyz;
    }
    else
    // Bottom Right
    if ( IN( mTexCoordsVec2 ).x > 0.5 && IN( mTexCoordsVec2 ).y < 0.5 )
    {
        newCoords.x = (IN(mTexCoordsVec2).x - 0.5) * 2.0;
        newCoords.y = IN(mTexCoordsVec2).y * 2.0;

        lFragCol = texture2D( lUniforms.mpCustomPerMesh->gBuffer3Map, newCoords ).xyz;
    }
    else
    // Top Left
    if ( IN( mTexCoordsVec2 ).x < 0.5 && IN( mTexCoordsVec2 ).y > 0.5 )
    {
        newCoords.y = (IN(mTexCoordsVec2).y - 0.5) * 2.0;
        newCoords.x = IN(mTexCoordsVec2).x * 2.0;

        lFragCol = texture2D( lUniforms.mpCustomPerMesh->gBufferMap, newCoords ).xyz;
    }
    // Top Right
    else
    {
        newCoords.x = (IN(mTexCoordsVec2).x - 0.5) * 2.0;
        newCoords.y = (IN(mTexCoordsVec2).y - 0.5) * 2.0;

        //lFragCol = texture2D( lUniforms.mpCustomPerMesh->gBuffer1Map, newCoords ).xyz;
        lFragCol = texture2D( lUniforms.mpCustomPerMesh->gBuffer1Map, newCoords ).xyz;
    }

	FRAGMENT_COLOUR = vec4( lFragCol.rgb, 1.0 );
}

#endif

// =================================================================================================
//
// D_DEBUG_QUAD_COMBINE
//
// =================================================================================================

#ifdef D_DEBUG_QUAD_COMBINE

//-----------------------------------------------------------------------------
//      Global Data

//-----------------------------------------------------------------------------
//      Typedefs and Classes 

DECLARE_INPUT
    IN_SCREEN_POSITION

    INPUT( vec2, mTexCoordsVec2,     TEXCOORD0 )
DECLARE_END

//-----------------------------------------------------------------------------
//      Functions


FRAGMENT_MAIN_COLOUR_SRT
{
    //Debug

    vec3 lFragCol = vec3( 1.0 );

    // Bottom Left
    if ( IN( mTexCoordsVec2 ).x < 0.5 && IN( mTexCoordsVec2 ).y < 0.5 )
    {
        lFragCol = texture2D( lUniforms.mpCustomPerMesh->gBufferMap, IN( mTexCoordsVec2 ).xy ).rgb;
    }
    else
    // Bottom Right
    if ( IN( mTexCoordsVec2 ).x > 0.5 && IN( mTexCoordsVec2 ).y < 0.5 )
    {
        lFragCol = texture2D( lUniforms.mpCustomPerMesh->gBuffer1Map, IN( mTexCoordsVec2 ).xy ).rgb;
    }
    else
    // Top Left
    if ( IN( mTexCoordsVec2 ).x < 0.5 && IN( mTexCoordsVec2 ).y > 0.5 )
    {
        lFragCol = texture2D( lUniforms.mpCustomPerMesh->gBuffer2Map, IN( mTexCoordsVec2 ).xy ).rgb;
    }
    // Top Right
    else
    {
        lFragCol = texture2D( lUniforms.mpCustomPerMesh->gBuffer3Map, IN( mTexCoordsVec2 ).xy ).rgb;
    }

	FRAGMENT_COLOUR = vec4( lFragCol.rgb, 1.0 );
}

#endif

