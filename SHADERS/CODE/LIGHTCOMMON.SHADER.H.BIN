

//-----------------------------------------------------------------------------
///
///     CustomPerMaterialUniforms
///
///     @brief      CustomPerMaterialUniforms
///
///     Stuff that is only used for these materials.
//-----------------------------------------------------------------------------
struct CustomPerMaterialUniforms
{
    vec4 gMaterialParamsVec4;
    vec4 gMaterialSFXVec4;
    vec4 gMaterialSFXColVec4;

    vec4 gAverageColour1Vec4;
    vec4 gAverageColour2Vec4;

    vec4 gRecolour1Vec4;
    vec4 gRecolour2Vec4;

    SAMPLER2DSHADOW_SRT( gShadowMap );

    vec4 gaPlanetPositionsVec4[ 6 ];
    vec4 gaPlanetColoursVec4[ 6 ];

    vec4 gSkyColourVec4;
    vec4 gHorizonColourVec4;
    vec4 gSunColourVec4;
    vec4 gScatteringParamsVec4;
    vec4 gSunPositionVec4;

    vec4 gFogParamsVec4;
    vec4 gFogColourVec4;
    vec4 gHeightFogParamsVec4;
    vec4 gHeightFogColourVec4;

    vec4 gWaterFogVec4;
    vec4 gWaterColourFarVec4;
    vec4 gWaterColourNearVec4;

    vec4 gSpaceHorizonColourVec4;
    vec4 gFogFadeHeightsVec4;
    vec4 gFogFadeHeights2Vec4;
    vec4 gSpaceSkyColourVec4;
    vec4 gSpaceScatteringParamsVec4;

    vec4 gSpaceSkyColour1Vec4;
    vec4 gSpaceSkyColour2Vec4;
    vec4 gSpaceSkyColour3Vec4;
    vec4 gSpaceFogColourVec4;
    vec4 gSpaceFogColour2Vec4;
    vec4 gSpaceFogParamsVec4;

#if !defined( D_RECOLOUR ) && !defined(D_COMBINE)
	SAMPLER2D( gDualPMapFront );
    SAMPLER2D( gDualPMapBack );
    SAMPLER2D( gCloudShadowMap );
#endif

	SAMPLER2D( gBufferMap );
    SAMPLER2D( gBuffer1Map );
    SAMPLER2D( gBuffer2Map );
    SAMPLER2D( gBuffer3Map );

    SAMPLER2D( gCausticMap );
    SAMPLER2D( gCausticOffsetMap );
};


//
// This is the SRT buffer that everything gets uploaded to (on PS4). PC just functions as normal.
//
struct UniformBuffer
{
    DECLARE_PTR( PerFrameUniforms, mpPerFrame )
    DECLARE_PTR( CustomPerMaterialUniforms, mpCustomPerMaterial )
    DECLARE_PTR( CommonPerMeshUniforms, mpCommonPerMesh )
    //DECLARE_PTR( CustomPerMeshUniforms, mpCustomPerMesh )
};