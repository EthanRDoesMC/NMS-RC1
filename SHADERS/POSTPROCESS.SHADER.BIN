[[FX]]

// -----------------------------------------------------------------------------------
// Samplers
// -----------------------------------------------------------------------------------

sampler gBufferMap = sampler_state
{
	Address = Clamp;
	TexUnit = 0;
};

sampler gBuffer1Map = sampler_state
{
	Address = Clamp;
	TexUnit = 1;
};

sampler gBuffer2Map = sampler_state
{
	Address = Clamp;
	TexUnit = 2;
};

sampler gBuffer3Map = sampler_state
{
	Address = Clamp;
	TexUnit = 3;
};

sampler gBuffer4Map = sampler_state
{
	Address = Clamp;
	TexUnit = 4;
};

sampler gColourLUT = sampler_state
{
	Address = Clamp;
	TexUnit = 5;
};

//sampler gCausticMap = sampler_state
//{
//	Address = Clamp;
//	Filter = Bilinear;
//	MaxAnisotropy = 0;
//	TexUnit = 8;
//};

//sampler gCausticOffsetMap = sampler_state
//{
//	Address = Clamp;
//	Filter = Bilinear;
//	MaxAnisotropy = 0;
//	TexUnit = 9;
//};


sampler gBlurMask = sampler_state
{
	Address = Clamp;
	TexUnit = 8;
};

sampler gDirtMask = sampler_state
{
	TexUnit = 9;
};


// -----------------------------------------------------------------------------------
// Uniforms
// -----------------------------------------------------------------------------------


float4 gHDRParamsVec4
	// a - Exposure (higher values make scene brighter)
	// b - Brightpass threshold (intensity where blooming begins)
	// c - BrightPass offset (smaller values produce stronger blooming) 
= {2, 0.6, 0.06, 0};

float4 gBlurParamsVec4 = {0, 0, 0, 0};
float4 gDoFParamsVec4;

// Planet
float4 gPlanetPositionVec4				= {0.0, -1204.0, 0.0, 1204.0};
float4 gScanParamsPosVec4               = {0.0, 0.0, 0.0, 0.0};
float4 gScanParamsCfg1Vec4              = {0.0, 0.0, 0.0, 0.0};
float4 gScanParamsCfg2Vec4              = {0.0, 0.0, 0.0, 0.0};

// -----------------------------------------------------------------------------------
// Contexts
// -----------------------------------------------------------------------------------

context COPY
{
	VertexShader = compile GLSL VS_FSQUAD;
	PixelShader = compile GLSL FS_POSTPROCESS_COPY;
}

context COPY_DEPTH
{
	VertexShader = compile GLSL VS_FSQUAD;
	PixelShader = compile GLSL FS_POSTPROCESS_COPY_DEPTH;
}

context DOWNSAMPLE_GBUFFERDEPTH
{
	VertexShader = compile GLSL VS_FSQUAD;
	PixelShader = compile GLSL FS_POSTPROCESS_DOWNSAMPLE_GBUFFERDEPTH;
}

context DOWNSAMPLE_DEPTH
{
    VertexShader = compile GLSL VS_FSQUAD;
    PixelShader = compile GLSL FS_POSTPROCESS_DOWNSAMPLE_DEPTH;
}

context PARTICLE_BLEND
{
	VertexShader = compile GLSL VS_FSQUAD;
	PixelShader = compile GLSL FS_POSTPROCESS_PARTICLE_BLEND;
}

context BRIGHTPASS
{
	VertexShader = compile GLSL VS_FSQUAD;
	PixelShader = compile GLSL FS_POSTPROCESS_BRIGHTPASS;
}

context GUASS_9
{
	VertexShader = compile GLSL VS_FSQUAD;
	PixelShader = compile GLSL FS_POSTPROCESS_GUASS_9TAP;
}

context GUASS_7
{
	VertexShader = compile GLSL VS_FSQUAD;
	PixelShader = compile GLSL FS_POSTPROCESS_GUASS_7TAP;
}

context GUASS_5
{
	VertexShader = compile GLSL VS_FSQUAD;
	PixelShader = compile GLSL FS_POSTPROCESS_GUASS_5TAP;
}

context BLUR_KAWASE
{
	VertexShader = compile GLSL VS_FSQUAD;
	PixelShader = compile GLSL FS_POSTPROCESS_BLUR_KAWASE;
}

context BLUR_KAWASE_PRESERVE_ALPHA
{
	VertexShader = compile GLSL VS_FSQUAD;
	PixelShader = compile GLSL FS_POSTPROCESS_BLUR_KAWASE_PRESERVE_ALPHA;
}

context ADDITION_2
{
	VertexShader = compile GLSL VS_FSQUAD;
	PixelShader  = compile GLSL FS_POSTPROCESS_ADDITION_2;
}

context ADDITION_4
{
	VertexShader = compile GLSL VS_FSQUAD;
	PixelShader  = compile GLSL FS_POSTPROCESS_ADDITION_4;
}

context COMBINE
{
	VertexShader = compile GLSL VS_FSQUAD;
	PixelShader  = compile GLSL FS_POSTPROCESS_COMBINE;
}

context FXAA
{
	VertexShader = compile GLSL VS_FSQUAD;
	PixelShader  = compile GLSL FS_POSTPROCESS_FXAA;
}

context GAMMACORRECT
{
	VertexShader = compile GLSL VS_FSQUAD;
	PixelShader  = compile GLSL FS_POSTPROCESS_GAMMACORRECT;
}

context BILATERAL_UPSAMPLE
{
	VertexShader = compile GLSL VS_FSQUAD;
	PixelShader  = compile GLSL FS_POSTPROCESS_BILATERAL_UPSAMPLE;
}

context DEPTH_AWARE_H_GUASS
{
	VertexShader = compile GLSL VS_FSQUAD;
	PixelShader  = compile GLSL FS_POSTPROCESS_DEPTH_AWARE_H_GUASS;
}

context DEPTH_AWARE_V_GUASS
{
    VertexShader = compile GLSL VS_FSQUAD;
    PixelShader  = compile GLSL FS_POSTPROCESS_DEPTH_AWARE_V_GUASS;
}

context DOWNSAMPLE
{
	VertexShader = compile GLSL VS_FSQUAD;
	PixelShader  = compile GLSL FS_POSTPROCESS_DOWNSAMPLE;
}


[[VS_FSQUAD]]
// =================================================================================================
#define D_TEX_QUAD
#include "ImmediateModeVertex.shader.h"

[[FS_POSTPROCESS_COPY]]
// =================================================================================================
#define D_POSTPROCESS_COPY
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_COPY_DEPTH]]
// =================================================================================================
#define D_POSTPROCESS_COPY_DEPTH
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_DOWNSAMPLE_GBUFFERDEPTH]]
// =================================================================================================
#define D_POSTPROCESS_DOWNSAMPLE_GBUFFERDEPTH
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_DOWNSAMPLE_DEPTH]]
// =================================================================================================
#define D_POSTPROCESS_DOWNSAMPLE_DEPTH
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_PARTICLE_BLEND]]
// =================================================================================================
#define D_POSTPROCESS_PARTICLE_BLEND
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_TONEMAP_DEPTH]]
// =================================================================================================
#define D_POSTPROCESS_TONEMAP_DEPTH
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_BRIGHTPASS]]
// =================================================================================================
#define D_POSTPROCESS_BRIGHTPASS
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_BLUR_KAWASE]]
// =================================================================================================
#define D_POSTPROCESS_BLUR_KAWASE
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_BLUR_KAWASE_PRESERVE_ALPHA]]
// =================================================================================================
#define D_POSTPROCESS_BLUR_KAWASE_PRESERVE_ALPHA
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_GUASS_9TAP]]
// =================================================================================================
#define D_POSTPROCESS_GUASS
#define D_GUASS_BLUR_RADIUS_4
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_GUASS_7TAP]]
// =================================================================================================
#define D_POSTPROCESS_GUASS
#define D_GUASS_BLUR_RADIUS_3
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_GUASS_5TAP]]
// =================================================================================================
#define D_POSTPROCESS_GUASS
#define D_GUASS_BLUR_RADIUS_2
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_GUASS_DEPTH_9TAP]]
// =================================================================================================
#define D_POSTPROCESS_GUASS_DEPTH
#define D_GUASS_BLUR_RADIUS_4
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_GUASS_DEPTH_7TAP]]
// =================================================================================================
#define D_POSTPROCESS_GUASS_DEPTH
#define D_GUASS_BLUR_RADIUS_3
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_GUASS_DEPTH_5TAP]]
// =================================================================================================
#define D_POSTPROCESS_GUASS_DEPTH
#define D_GUASS_BLUR_RADIUS_2
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_ADDITION_2]]
// =================================================================================================
#define D_POSTPROCESS_ADDITION_2
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_ADDITION_4]]
// =================================================================================================
#define D_POSTPROCESS_ADDITION_4
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_COMBINE]]
// =================================================================================================
#define D_POSTPROCESS_COMBINE
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_GAMMACORRECT]]
// =================================================================================================
#define D_POSTPROCESS_GAMMACORRECT
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_BILATERAL_UPSAMPLE]]
// =================================================================================================
#define D_POSTPROCESS_BILATERAL_UPSAMPLE
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_DEPTH_AWARE_H_GUASS]]
// =================================================================================================
#define D_POSTPROCESS_DEPTH_AWARE_H_GUASS
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_DEPTH_AWARE_V_GUASS]]
// =================================================================================================
#define D_POSTPROCESS_DEPTH_AWARE_V_GUASS
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_DOWNSAMPLE]]
// =================================================================================================
#define D_POSTPROCESS_DOWNSAMPLE
#include "Fullscreen/PostProcessFragment.shader.h"

[[FS_POSTPROCESS_FXAA]]
// =================================================================================================
#include "Fullscreen/FxaaFragment.shader.h"

