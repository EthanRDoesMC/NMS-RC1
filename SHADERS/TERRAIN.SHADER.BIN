[[FX]]

// Samplers
sampler gDiffuseMap = sampler_state
{
	Address = Wrap;
	Filter = Trilinear;
	MaxAnisotropy = 16;
	TexUnit = 0;
};

sampler gNormalMap = sampler_state
{
	Address = Wrap;
	Filter = Trilinear;
	MaxAnisotropy = 16;
	TexUnit = 1;
};

sampler gAmbientMap = sampler_state
{
	Address = Clamp;
	Filter = Bilinear;
	MaxAnisotropy = 0;
	TexUnit = 2;
};

sampler gSubstanceDiffuseMap = sampler_state
{
	Address = Wrap;
	Filter = Trilinear;
	MaxAnisotropy = 16;
	TexUnit = 3;
};

sampler gSubstanceNormalMap = sampler_state
{
	Address = Wrap;
	Filter = Trilinear;
	MaxAnisotropy = 16;
	TexUnit = 4;
};

//sampler gCausticMap = sampler_state
//{
//	TexUnit = 7;
//};

//sampler gCausticOffsetMap = sampler_state
//{
//	TexUnit = 8;
//};


sampler gFadeNoiseMap = sampler_state
{
	DefaultTexture = SHADER/FADENOISE.DDS;
	TexUnit = 13;
};

sampler gDualPMapFront = sampler_state
{
	TexUnit = 9;
};

sampler gDualPMapBack = sampler_state
{
	TexUnit = 10;
};


sampler gCloudShadowMap = sampler_state
{
	TexUnit = 14;
};

sampler gShadowMap = sampler_state
{
	TexUnit = 15;
};



// Uniforms
float4 gTerrainLodParamsVec4			= {1.0, 0.0, 0.0, 0.0}; 

// Planet
float4 gPlanetPositionVec4				= {0.0, 0.0, 0.0, 0.0}; 

// Lighting
float4 gMaterialParamsVec4              = {0.9, 0.5, 0.0, 0.5};

// Fog
float4 gSkyColourVec4          = {1.0, 0.0, 1.0, 0.0};
float4 gHorizonColourVec4               = {1.0, 0.0, 1.0, 0.0};
float4 gSunColourVec4               = {1.0, 0.0, 1.0, 0.0};
float4 gWaterColourNearVec4          = {1.0, 0.0, 1.0, 0.0};
float4 gWaterColourFarVec4                 = {1.0, 0.0, 1.0, 0.0};
float4 gWaterFogVec4                    = {1.0, 0.0, 1.0, 0.0};
float4 gFogColourVec4                   = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceHorizonColourVec4               = {1.0, 0.0, 1.0, 0.0};
float4 gHeightFogColourVec4             = {1.0, 0.0, 1.0, 0.0};
float4 gHeightFogParamsVec4         = {1.0, 0.0, 1.0, 0.0};
float4 gFogParamsVec4                         = {1.0, 0.0, 1.0, 0.0};
float4 gScatteringParamsVec4           = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceFogParamsVec4                    = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceSkyColourVec4            = {1.0, 0.0, 1.0, 0.0};
float4 gSunPositionVec4                 = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceScatteringParamsVec4       = {1.0, 0.0, 1.0, 0.0};

// Scan
float4 gScanParamsPosVec4               = {0.0, 0.0, 0.0, 0.0};
float4 gScanParamsCfg1Vec4              = {0.0, 0.0, 0.0, 0.0};
float4 gScanParamsCfg2Vec4              = {0.0, 0.0, 0.0, 0.0};
float4 gScanParamsCfg3Vec4              = {0.0, 0.0, 0.0, 0.0};

float4 gMiningPosVec4                   = {0.0, 0.0, 0.0, 0.0};
float4 gDebugColourVec4                 = {1.0, 0.0, 0.0, 0.0};



float4 maAverageColoursVec4;
float4 maTerrainColoursVec4;

// Contexts
context SHADOW
{
	VertexShader = compile GLSL VS_SHADOW;
	PixelShader  = compile GLSL FS_SHADOW;
}

context SHADOW_FADE
{
    VertexShader = compile GLSL VS_SHADOW_FADE;
    PixelShader = compile GLSL FS_SHADOW_FADE;
}

context REFLECT_DUALP
{
	VertexShader = compile GLSL VS_REFLECT_DUALP;
	PixelShader  = compile GLSL FS_REFLECT_DUALP;
}

context REFLECT_WATER_UP
{
	VertexShader = compile GLSL VS_REFLECT_WATER_UP;
	PixelShader  = compile GLSL FS_REFLECT_WATER_UP;
}

context REFLECT_WATER
{
	VertexShader = compile GLSL VS_REFLECT_WATER;
	PixelShader  = compile GLSL FS_REFLECT_WATER; 
}
 
context LIT_FORWARD
{
	VertexShader = compile GLSL VS_GENERAL;
	PixelShader  = compile GLSL FS_LIT_FORWARD;
}

context LIT_FORWARD_LOW
{
	VertexShader = compile GLSL VS_GENERAL_LOW;
	PixelShader  = compile GLSL FS_LIT_FORWARD_LOW;
}

context LIT_DEFER
{
	VertexShader = compile GLSL VS_DEFER;
	PixelShader  = compile GLSL FS_LIT_DEFER;
}

context LIT_DEFER_LOW
{
	VertexShader = compile GLSL VS_DEFER_LOW;
	PixelShader  = compile GLSL FS_LIT_DEFER_LOW;
}

context LIT_FORWARD_ASTEROID
{
	VertexShader = compile GLSL VS_ASTEROID;
	PixelShader  = compile GLSL FS_LIT_FORWARD_ASTEROID;
}

context LIT_DEFER_ASTEROID
{
	VertexShader = compile GLSL VS_DEFER_ASTEROID;
	PixelShader  = compile GLSL FS_LIT_DEFER_ASTEROID;
}


[[VS_SHADOW]]
// =================================================================================================
#define D_TERRAIN
#include "ShadowVertex.shader.h"

[[FS_SHADOW]]
// =================================================================================================
#define D_TERRAIN
#include "ShadowFragment.shader.h"

[[VS_SHADOW_FADE]]
// =================================================================================================
#define D_TERRAIN
#define D_FADE
#include "ShadowVertex.shader.h"

[[FS_SHADOW_FADE]]
// =================================================================================================
#define D_TERRAIN
#define D_FADE
#include "ShadowFragment.shader.h"

[[VS_GENERAL]]
// =================================================================================================
#include "Custom/TerrainVertex.shader.h"

[[VS_DEFER]]
// =================================================================================================
#define D_DEFER
#include "Custom/TerrainVertex.shader.h"

[[VS_GENERAL_LOW]]
// =================================================================================================
#define D_NO_WATER
#include "Custom/TerrainVertex.shader.h"

[[VS_REFLECT_WATER]]
// =================================================================================================
#define D_LOW_QUALITY
#define D_REFLECT_WATER
#include "Custom/TerrainVertex.shader.h"

[[VS_DEFER_LOW]]
// =================================================================================================
#define D_DEFER
#define D_NO_WATER
#include "Custom/TerrainVertex.shader.h"

[[FS_LIT_FORWARD]]
// =================================================================================================
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_FORWARD_LOW]]
// =================================================================================================
#define D_LOW_QUALITY
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_LOW]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_NO_WATER
#include "Custom/TerrainFragment.shader.h"

[[VS_ASTEROID]]
// =================================================================================================
//#define D_LOW_QUALITY
#define D_ASTEROID
#include "Custom/TerrainVertex.shader.h"

[[VS_DEFER_ASTEROID]]
// =================================================================================================
//#define D_LOW_QUALITY
#define D_DEFER
#define D_ASTEROID
#include "Custom/TerrainVertex.shader.h"

[[FS_LIT_FORWARD_ASTEROID]]
// =================================================================================================
//#define D_LOW_QUALITY
#define D_ASTEROID
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_ASTEROID]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_LOW_QUALITY
#define D_ASTEROID
#include "Custom/TerrainFragment.shader.h"



[[VS_REFLECT_DUALP]]
// =================================================================================================
#define D_REFLECT_DUALP
#include "Custom/TerrainVertex.shader.h"

[[FS_REFLECT_DUALP]]
// =================================================================================================
#define D_REFLECT_DUALP
#define _F07_UNLIT
#include "Custom/TerrainFragment.shader.h"

[[FS_REFLECT_WATER_UP]]
// =================================================================================================
#define D_REFLECT_WATER_UP
#define _F07_UNLIT
#include "Custom/TerrainFragment.shader.h"

[[VS_REFLECT_WATER_UP]]
// =================================================================================================
#define D_REFLECT_WATER_UP
#define _F07_UNLIT
#include "Custom/TerrainVertex.shader.h"

[[FS_REFLECT_WATER]]
// =================================================================================================
#define D_REFLECT_WATER
#define _F07_UNLIT
#include "Custom/TerrainFragment.shader.h"
 



